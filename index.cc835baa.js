class t{constructor(t,e,r,i){this.x=t,this.y=e,this.z=r,this.w=i}equals(t){return M.numberEquals(t.x,this.x)&&M.numberEquals(t.y,this.y)&&M.numberEquals(t.z,this.z)&&M.numberEquals(t.w,this.w)}}class e{constructor(t,e,r){this.x=t,this.y=e,this.z=r,this.w=1}equals(t){return M.numberEquals(t.x,this.x)&&M.numberEquals(t.y,this.y)&&M.numberEquals(t.z,this.z)&&M.numberEquals(t.w,this.w)}}class r{constructor(t,e,r){this.x=t,this.y=e,this.z=r,this.w=0}equals(t){return M.numberEquals(t.x,this.x)&&M.numberEquals(t.y,this.y)&&M.numberEquals(t.z,this.z)&&M.numberEquals(t.w,this.w)}}class i{constructor(t,e,r){this.r=t,this.g=e,this.b=r}equals(t){return M.numberEquals(t.r,this.r)&&M.numberEquals(t.g,this.g)&&M.numberEquals(t.b,this.b)}}class s{constructor(t,e){this.position=t,this.velocity=e}}class a{constructor(t,e){this.w=t,this.h=e,this.plane=Array(e);for(let e=0;e<this.plane.length;e++)this.plane[e]=Array(t);for(let r=0;r<e;r++)for(let e=0;e<t;e++)this.plane[r][e]=new i(0,0,0)}fill(t){for(let e=0;e<this.plane.length;e++)for(let r=0;r<this.plane[e].length;r++)this.plane[e][r]=t}setPixel(t,e,r){this.plane[r][e]=new i(t.r,t.g,t.b)}getPixel(t,e){return this.plane[e][t]?new i(this.plane[e][t].r,this.plane[e][t].g,this.plane[e][t].b):this.plane[e][t]}}class n{constructor(t,e,r){this.rows=e,this.columns=r,this.matrix=Array(e);for(let t=0;t<e;t++)this.matrix[t]=Array(r);let i=0;for(let s=0;s<e;s++)for(let e=0;e<r;e++)this.matrix[s][e]=t[i],i+=1}getNumber(t,e){return void 0!=this.matrix[t][e]||null!=this.matrix[t][e]?this.matrix[t][e]:NaN}setNumber(t,e,r){this.matrix[t][e]=r}getRows(){return this.rows}getColumns(){return this.columns}getSize(){return this.rows*this.columns}equals(t){if(this.rows!==t.getRows()&&this.columns!==t.getColumns())return!1;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)if(!M.numberEquals(this.matrix[e][r],t.getNumber(e,r)))return!1;return!0}}class o{constructor(t,e){this.origin=t,this.direction=e}getOrigin(){return new e(this.origin.x,this.origin.y,this.origin.z)}getDirection(){return new r(this.direction.x,this.direction.y,this.direction.z)}equals(t){return!!t&&this.origin.equals(t.getOrigin())&&this.direction.equals(t.getDirection())}}class l{constructor(){this.matrix=D.createIdentityMatrix(4),this.material=D.createDefaultMaterial(),this.id=D.uuid()}getId(){return this.id}getTransform(){return this.matrix}setTransform(t){this.matrix=t}getMaterial(){return this.material}setMaterial(t){this.material=D.createMaterial(t.getAmbient(),t.getDiffuse(),t.getSpecular(),t.getShininess(),t.getColor(),t.getReflective()),this.material.pattern=t.pattern}normalAt(t){let e=this.world_to_object(t),r=this.local_normal_at(e);return this.normal_to_world(r)}intersect(t){let e=M.transform(t,M.inverse(this.getTransform()));return this.local_intersect(e)}world_to_object(t){return M.multiplyMatrixWithPoint(M.inverse(this.getTransform()),t)}normal_to_world(t){return t=M.multiplyMatrixWithVector(M.transpose(M.inverse(this.getTransform())),t),t=M.normalize(t)}equals(t){return this.material.equals(t.getMaterial())&&this.matrix.equals(t.getTransform())}}class c extends l{constructor(t=new e(0,0,0)){super(),this.savedRay=null}local_normal_at(t){return new r(t.x,t.y,t.z)}local_intersect(t){return this.savedRay=t,new m}}class u extends l{constructor(t=new e(0,0,0)){super()}local_normal_at(t){return new r(0,1,0)}local_intersect(t){return 1e-38>Math.abs(t.getDirection().y)?new m:new m(new g(-t.getOrigin().y/t.getDirection().y,this))}}class h extends l{constructor(t=new e(0,0,0)){super(),this.origin=t}local_normal_at(t){return M.substractPoints(t,this.origin)}local_intersect(t){let e=M.substractVectors(new r(t.getOrigin().x,t.getOrigin().y,t.getOrigin().z),new r(0,0,0)),i=M.dotProduct(t.getDirection(),t.getDirection()),s=2*M.dotProduct(t.getDirection(),e),a=Math.pow(s,2)-4*i*(M.dotProduct(e,e)-1);if(a<0)return new m;let n=(-s-Math.sqrt(a))/(2*i),o=(-s+Math.sqrt(a))/(2*i);return new m(new g(n,this),new g(o,this))}}class g{constructor(t,e){this.t=t,this.shape=e}getT(){return this.t}getShape(){return this.shape}equals(t){return t.getT()===this.t&&t.getShape().equals(this.shape)}}class m{constructor(...t){this.intersections=t}getCount(){return this.intersections.length}getIntersections(){return this.intersections}getIntersectionAt(t){return this.intersections[t]}}class d{constructor(t,e){this.position=t,this.intensity=e}getIntensity(){return D.createColor(this.intensity.r,this.intensity.g,this.intensity.b)}getPosition(){return D.createPoint(this.position.x,this.position.y,this.position.z)}equals(t){return this.position.equals(t.position)&&this.intensity.equals(t.intensity)}}class x{constructor(t=.1,e=.9,r=.9,s=200,a=new i(1,1,1),n=0){if(this.ambient=t,this.diffuse=e,this.specular=r,this.shininess=s,this.color=a,this.reflective=n,t<0||e<0||r<0||s<0)throw Error("Material value < 0 is invalid")}getAmbient(){return this.ambient}setAmbient(t){this.ambient=t}getDiffuse(){return this.diffuse}setDiffuse(t){this.diffuse=t}getSpecular(){return this.specular}setSpecular(t){this.specular=t}getShininess(){return this.shininess}setShininess(t){this.shininess=t}getColor(){return D.createColor(this.color.r,this.color.g,this.color.b)}setColor(t){this.color=t}getReflective(){return this.reflective}setReflective(t){this.reflective=t}equals(t){return M.numberEquals(t.ambient,this.ambient)&&M.numberEquals(t.diffuse,this.diffuse)&&M.numberEquals(t.specular,this.specular)&&M.numberEquals(t.shininess,this.shininess)&&M.numberEquals(t.reflective,this.reflective)&&t.color.equals(this.color)}}class w{constructor(t=null,e=[]){this.lightSource=t,this.shapes=e}getShapeAt(t){return this.shapes[t]}getShapes(){return this.shapes}getLightSource(){return this.lightSource}setLightSource(t){this.lightSource=t}setShapes(t){this.shapes=t}intersect(t){let e=[];return this.shapes.forEach(r=>{let i=r.intersect(t);e.push(...i.getIntersections())}),e.sort((t,e)=>t.getT()-e.getT()),new m(...e)}contains(t){let e=!1;return this.shapes.forEach(r=>{if(r.equals(t)){e=!0;return}}),e}}class p{constructor(t,e,r,i,s,a,n,o){this.t=t,this.object=e,this.point=r,this.overPoint=i,this.eyeV=s,this.normalV=a,this.inside=n,this.reflectV=o}getT(){return this.t}getObject(){return this.object}getPoint(){return this.point}getEyeV(){return this.eyeV}getNormalV(){return this.normalV}isInside(){return this.inside}getOverPoint(){return this.overPoint}getReflectV(){return this.reflectV}}class f{constructor(t,e,r,i=D.createIdentityMatrix(4)){this.hsize=t,this.vsize=e,this.fieldOfView=r,this.transform=i,this.pixelSize=-1,this.halfWidth=-1,this.halfHeight=-1,this.calculatePixelSize()}getHSize(){return this.hsize}getVSize(){return this.vsize}getFieldOfView(){return this.fieldOfView}getTransform(){return this.transform}setTranform(t){this.transform=t}getPixelSize(){return this.pixelSize}getHalfWidth(){return this.halfWidth}getHalfHeight(){return this.halfHeight}calculatePixelSize(){let t=Math.tan(this.fieldOfView/2),e=this.hsize/this.vsize;e>=1?(this.halfWidth=t,this.halfHeight=t/e):(this.halfWidth=t*e,this.halfHeight=t),this.pixelSize=2*this.halfWidth/this.hsize}}const b=new i(0,0,0),y=new i(1,1,1);class M{static addPoints(t,e){return D.createPoint(t.x+e.x,t.y+e.y,t.z+e.z)}static substractPoints(t,e){return D.createTuple(t.x-e.x,t.y-e.y,t.z-e.z,t.w-e.w)}static substractVectors(t,e){return D.createTuple(t.x-e.x,t.y-e.y,t.z-e.z,t.w-e.w)}static substractVectorFromPoint(t,e){return D.createTuple(t.x-e.x,t.y-e.y,t.z-e.z,t.w-e.w)}static addTuples(t,e){return D.createTuple(t.x+e.x,t.y+e.y,t.z+e.z,t.w+e.w)}static substractTuples(t,e){return D.createPoint(t.x-e.x,t.y-e.y,t.z-e.z)}static addVectors(t,e){return D.createTuple(t.x+e.x,t.y+e.y,t.z+e.z,t.w+e.w)}static addColors(t,e){return D.createColor(t.r+e.r,t.g+e.g,t.b+e.b)}static substractColors(t,e){return D.createColor(t.r-e.r,t.g-e.g,t.b-e.b)}static multiplyColor(t,e){return D.createColor(t.r*e,t.g*e,t.b*e)}static multiplyColors(t,e){return D.createColor(t.r*e.r,t.g*e.g,t.b*e.b)}static inverseVector(t){return D.createTuple(0-t.x,0-t.y,0-t.z,0-t.w)}static inverseTuple(t){return D.createTuple(0-t.x,0-t.y,0-t.z,0-t.w)}static multiplyTuple(t,e){return D.createTuple(t.x*e,t.y*e,t.z*e,t.w*e)}static multiplyPoint(t,e){return D.createPoint(t.x*e,t.y*e,t.z*e)}static multiplyVector(t,e){return D.createVector(t.x*e,t.y*e,t.z*e)}static divideTuple(t,e){return D.createTuple(t.x/e,t.y/e,t.z/e,t.w/e)}static magnitudeOf(t){return Math.sqrt(Math.pow(t.x,2)+Math.pow(t.y,2)+Math.pow(t.z,2)+Math.pow(t.w,2))}static normalize(t){return this.divideTuple(t,this.magnitudeOf(t))}static dotProduct(t,e){return t.x*e.x+t.y*e.y+t.z*e.z+t.w*e.w}static crossProduct(t,e){return new r(t.y*e.z-t.z*e.y,t.z*e.x-t.x*e.z,t.x*e.y-t.y*e.x)}static multiplyMatrix(t,e){let r=[];for(let i=0;i<t.getRows();i++)for(let s=0;s<e.getColumns();s++){let a=0;for(let r=0;r<t.getColumns();r++)a+=t.getNumber(i,r)*e.getNumber(r,s);r.push(a)}return D.createMatrix(r,t.getRows(),e.getColumns())}static transpose(t){let e=[];for(let r=0;r<t.getRows();r++)for(let i=0;i<t.getColumns();i++)e.push(t.getNumber(i,r));return D.createMatrix(e,t.getColumns(),t.getRows())}static getDeterminant(t){if(2===t.getRows()&&2===t.getColumns())return t.getNumber(0,0)*t.getNumber(1,1)-t.getNumber(0,1)*t.getNumber(1,0);let e=0;for(let r=0;r<t.getColumns();r++)e+=t.getNumber(0,r)*this.getCofactor(t,0,r);return e}static isInvertible(t){return 0!==this.getDeterminant(t)}static inverse(t){if(!this.isInvertible(t))throw Error("This matrix is not invertible");let e=this.nullMatrix(t),r=this.getDeterminant(t);for(let i=0;i<t.getRows();i++)for(let s=0;s<t.getColumns();s++){let a=this.getCofactor(t,i,s);e.setNumber(s,i,a/r)}return e}static getCofactor(t,e,r){let i=this.getMinor(t,e,r);return this.isOdd(e+r)?0-i:i}static isOdd(t){return t%2==1}static getMinor(t,e,r){let i=this.getSubmatrix(t,e,r);return this.getDeterminant(i)}static getSubmatrix(t,e,r){let i=[];for(let s=0;s<t.getRows();s++)if(s!==e)for(let e=0;e<t.getColumns();e++)e!==r&&i.push(t.getNumber(s,e));return D.createMatrix(i,t.getRows()-1,t.getColumns()-1)}static cloneMatrix(t){let e=[];for(let r=0;r<t.getRows();r++)for(let i=0;i<t.getColumns();i++)e.push(t.getNumber(r,i));return D.createMatrix(e,t.getRows(),t.getColumns())}static multiplyMatrixWithPoint(t,r){let i=D.createMatrix([r.x,r.y,r.z,r.w],4,1),s=this.multiplyMatrix(t,i);return new e(s.getNumber(0,0),s.getNumber(1,0),s.getNumber(2,0))}static multiplyMatrixWithVector(t,e){let i=D.createMatrix([e.x,e.y,e.z,e.w],4,1),s=this.multiplyMatrix(t,i);return new r(s.getNumber(0,0),s.getNumber(1,0),s.getNumber(2,0))}static nullMatrix(t){let e=[];for(let r=0;r<t.getRows();r++)for(let r=0;r<t.getColumns();r++)e.push(0);return D.createMatrix(e,t.getRows(),t.getColumns())}static tick(t,e){return new s(this.addTuples(e.position,e.velocity),this.addVectors(e.velocity,this.addVectors(t.gravity,t.wind)))}static getRadians(t){return t*Math.PI/180}static getRayPosition(t,e){return this.addTuples(t.getOrigin(),this.multiplyVector(t.getDirection(),e))}static numberEquals(t,e){return 1e-5>Math.abs(t-e)}static getHit(t){let e=[];for(let r of t.getIntersections())r.getT()>=0&&e.push(r);return(e.sort((t,e)=>t.getT()-e.getT()),0===e.length)?null:e[0]}static transform(t,e){return D.createRay(this.multiplyMatrixWithPoint(e,t.getOrigin()),this.multiplyMatrixWithVector(e,t.getDirection()))}static normalAtPlane(t,e){let r=M.multiplyMatrixWithPoint(M.inverse(t.getTransform()),e),i=t.normalAt(r),s=M.multiplyMatrixWithVector(M.transpose(M.inverse(t.getTransform())),i);return s.w=0,M.normalize(s)}static normalAt(t,e){if(t instanceof u)return this.normalAtPlane(t,e);let r=D.createPoint(0,0,0),i=M.multiplyMatrixWithPoint(M.inverse(t.getTransform()),e),s=M.substractPoints(i,r),a=M.multiplyMatrixWithVector(M.transpose(M.inverse(t.getTransform())),s);return a.w=0,M.normalize(a)}static reflect(t,e){let r=2*M.dotProduct(t,e),i=M.multiplyVector(e,r);return M.substractVectors(t,i)}static lighting(t,e,r,i,s,a,n=!1){let o;o=t.pattern?t.pattern.colorAtShape(e,i):t.getColor();let l=M.normalize(M.substractPoints(r.getPosition(),i)),c=M.multiplyColor(o,t.getAmbient()),u=M.dotProduct(l,a);if(u<0||n)o=c;else{let e=M.multiplyColor(o,t.getDiffuse()*u),i=M.reflect(M.inverseVector(l),a),n=M.dotProduct(i,s);if(n<=0)o=M.addColors(c,e);else{let i=Math.pow(n,t.getShininess()),s=M.multiplyColor(r.getIntensity(),t.getSpecular()*i);o=M.addColors(M.addColors(c,e),s)}}return n?c:o}static prepareComputations(t,e){let r=M.getRayPosition(e,t.getT()),i=M.multiplyVector(e.getDirection(),-1),s=M.normalAt(t.getShape(),r),a=!1;0>M.dotProduct(s,i)&&(a=!0,s=M.multiplyVector(s,-1));let n=M.addTuples(r,M.multiplyPoint(s,1e-5)),o=M.reflect(e.getDirection(),s);return new p(t.getT(),t.getShape(),r,n,i,s,a,o)}static shadeHit(t,e,r=5){let i=t.getLightSource();if(i){let s=M.isShadowed(t,e.getOverPoint()),a=M.lighting(e.getObject().getMaterial(),e.getObject(),i,e.getOverPoint(),e.getEyeV(),e.getNormalV(),s),n=M.reflectedColor(t,e,r);return M.addColors(a,n)}throw Error("Unable to calculate shade without lightSource in world")}static colorAt(t,e,r=5){let s=t.intersect(e),a=M.getHit(s);if(!a)return new i(0,0,0);{let i=M.prepareComputations(a,e);return M.shadeHit(t,i,r)}}static viewTransform(t,e,r){let i=M.normalize(M.substractPoints(e,t)),s=M.normalize(r),a=M.crossProduct(i,s),n=M.crossProduct(a,i),o=[a.x,a.y,a.z,0,n.x,n.y,n.z,0,-i.x,-i.y,-i.z,0,0,0,0,1],l=D.createMatrix(o,4,4);return M.multiplyMatrix(l,D.getTranslationMatrix(-t.x,-t.y,-t.z))}static rayForPixel(t,r,i){let s=(r+.5)*t.getPixelSize(),a=(i+.5)*t.getPixelSize(),n=t.getHalfWidth()-s,o=t.getHalfHeight()-a,l=M.multiplyMatrixWithPoint(M.inverse(t.getTransform()),new e(n,o,-1)),c=M.multiplyMatrixWithPoint(M.inverse(t.getTransform()),new e(0,0,0)),u=M.normalize(M.substractPoints(l,c));return D.createRay(c,u)}static isShadowed(t,e){let r=t.getLightSource();if(r){let i=M.substractPoints(r.getPosition(),e),s=M.magnitudeOf(i),a=M.normalize(i),n=D.createRay(e,a),o=t.intersect(n),l=M.getHit(o);return!!(l&&l.getT()<s)}throw Error("Error there is no light source is present in this world")}static reflectedColor(t,e,r){if(r<=0||0===e.getObject().getMaterial().getReflective())return new i(0,0,0);let s=D.createRay(e.getOverPoint(),e.getReflectV()),a=M.colorAt(t,s,r-1);return M.multiplyColor(a,e.getObject().getMaterial().getReflective())}}class z{constructor(){this.matrix=D.createIdentityMatrix(4)}setTransform(t){this.matrix=t}colorAtShape(t,e){let r=M.multiplyMatrixWithPoint(M.inverse(t.getTransform()),e),i=M.multiplyMatrixWithPoint(M.inverse(this.matrix),r);return this.colorAt(i)}}class P extends z{constructor(t,e){super(),this.a=t,this.b=e}colorAt(t){return Math.floor(t.x)%2==0?this.a:this.b}}class v extends z{constructor(t,e){super(),this.a=t,this.b=e}colorAt(t){let e=M.substractColors(this.b,this.a),r=t.x-Math.floor(t.x);return M.addColors(this.a,M.multiplyColor(e,r))}colorAtShape(t,e){let r=M.multiplyMatrixWithPoint(M.inverse(t.getTransform()),e),i=M.multiplyMatrixWithPoint(M.inverse(this.matrix),r);return this.colorAt(i)}}class S extends z{constructor(t,e){super(),this.a=t,this.b=e}colorAt(t){return Math.floor(Math.sqrt(t.x*t.x+t.z*t.z))%2==0?this.a:this.b}}class T extends z{constructor(t,e){super(),this.a=t,this.b=e}colorAt(t){return(Math.floor(t.x)+Math.floor(t.y)+Math.floor(t.z))%2==0?this.a:this.b}}class C extends z{constructor(t,e){super(),this.a=t,this.b=e}colorAt(t){return(Math.floor(t.x)+Math.floor(t.y)+Math.floor(t.z))%2==0?this.a.colorAt(t):this.b.colorAt(t)}}class N extends z{constructor(t,e){super(),this.a=t,this.b=e}colorAt(t){let e=this.a.colorAt(t),r=this.b.colorAt(t);return M.addColors(e,r)}}class E extends z{constructor(t){super(),this.pattern=t}colorAt(t){let r=new e(t.x+Math.sin(t.x*t.y*t.z),t.y+Math.sin(t.x*t.y*t.z),t.z+Math.sin(t.x*t.y*t.z));return this.pattern.colorAt(r)}}class D{static createMatrix(t,e,r){return new n(t,e,r)}static getTranslationMatrix(t,e,r){let i=this.createIdentityMatrix(4);return i.setNumber(0,3,t),i.setNumber(1,3,e),i.setNumber(2,3,r),i}static getScalingMatrix(t,e,r){let i=this.createIdentityMatrix(4);return i.setNumber(0,0,t),i.setNumber(1,1,e),i.setNumber(2,2,r),i}static getRotationMatrixX(t){let e=this.createIdentityMatrix(4);return e.setNumber(1,1,Math.cos(t)),e.setNumber(1,2,-Math.sin(t)),e.setNumber(2,1,Math.sin(t)),e.setNumber(2,2,Math.cos(t)),e}static getRotationMatrixY(t){let e=this.createIdentityMatrix(4);return e.setNumber(0,0,Math.cos(t)),e.setNumber(0,2,Math.sin(t)),e.setNumber(2,0,-Math.sin(t)),e.setNumber(2,2,Math.cos(t)),e}static getRotationMatrixZ(t){let e=this.createIdentityMatrix(4);return e.setNumber(0,0,Math.cos(t)),e.setNumber(0,1,-Math.sin(t)),e.setNumber(1,0,Math.sin(t)),e.setNumber(1,1,Math.cos(t)),e}static getShearingMatrix(t,e,r,i,s,a){let n=this.createIdentityMatrix(4);return n.setNumber(0,1,t),n.setNumber(0,2,e),n.setNumber(1,0,r),n.setNumber(1,2,i),n.setNumber(2,0,s),n.setNumber(2,1,a),n}static createIdentityMatrix(t){if(t<0)throw Error("Size must be positive");let e=[];for(let r=0;r<t;r++)for(let i=0;i<t;i++)r===i?e.push(1):e.push(0);return new n(e,t,t)}static createTuple(i,s,a,n){return M.numberEquals(n,1)?new e(i,s,a):M.numberEquals(n,0)?new r(i,s,a):new t(i,s,a,n)}static createPoint(t,r,i){return new e(t,r,i)}static createVector(t,e,i){return new r(t,e,i)}static createColor(t,e,r){return new i(t,e,r)}static createCanvas(t,e){return new a(t,e)}static createRay(t,e){return new o(t,e)}static createIntersection(t,e){return new g(t,e)}static createSphere(){return new h}static createPlane(){return new u}static createTestShape(){return new c}static uuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){let e=16*Math.random()|0;return("x"==t?e:3&e|8).toString(16)})}static createPointLight(t,e){return new d(t,e)}static createDefaultMaterial(){return new x}static createMaterial(t,e,r,i,s,a){return new x(t,e,r,i,s,a)}static createWorld(){return new w}static createDefaultWorld(){let t=D.createPointLight(new e(-10,10,-10),new i(1,1,1)),r=new h;r.setMaterial(new x(.1,.7,.2,200,new i(.8,1,.6)));let s=new h;return s.setTransform(D.getScalingMatrix(.5,.5,.5)),new w(t,[r,s])}static createCamera(t,e,r){return new f(t,e,r)}static buildStripePattern(t,e){return new P(t,e)}static createGradientPattern(t,e){return new v(t,e)}static createRingPattern(t,e){return new S(t,e)}static createCheckersPattern(t,e){return new T(t,e)}static createNestedStripeAndGradientPattern(t,e){return new C(this.buildStripePattern(t,e),this.createGradientPattern(t,e))}static createBlendedGradientAndRingPattern(t,e){return new N(this.createGradientPattern(t,e),this.createRingPattern(t,e))}static createPerturbedGradientAndRingPattern(t,e){let r=this.createGradientPattern(t,e);return this.createPerturbedPattern(r)}static createNestedPattern(t,e){return new C(t,e)}static createPerturbedPattern(t){return new E(t)}}class I{static getPpmString(t){return this.getPpmHeader(t)+"\n"+this.getPpmBody(t)}static getPpmHeader(t){return`P3
${t.w} ${t.h}
255`}static getPpmBody(t){let e="";for(let r=0;r<t.h;r++){let i="",s=0;for(let e=0;e<t.w;e++){let a=this.getRED(t.getPixel(e,r));s+a.length>70&&(i=i.trim()+"\n",s=0),i+=a+" ",s+=(a+" ").length;let n=this.getGREEN(t.getPixel(e,r));s+n.length>70&&(i=i.trim()+"\n",s=0),i+=n+" ",s+=(n+" ").length;let o=this.getBLUE(t.getPixel(e,r));s+o.length>70&&(i=i.trim()+"\n",s=0),i+=o+" ",s+=(o+" ").length}e+=i.trim()+"\n"}return e.trim()+"\n"}static getRED(t){let e=0;return t&&(e=Math.round(255*t.r)>255?255:Math.round(255*t.r)),`${e}`}static getGREEN(t){let e=0;return t&&(e=Math.round(255*t.g)>255?255:Math.round(255*t.g)),`${e}`}static getBLUE(t){let e=0;return t&&(e=Math.round(255*t.b)>255?255:Math.round(255*t.b)),`${e}`}static render(t,e){let r=D.createCanvas(t.getHSize(),t.getVSize());for(let i=0;i<t.getVSize();i++)for(let s=0;s<t.getHSize();s++){let a=M.rayForPixel(t,s,i),n=M.colorAt(e,a);r.setPixel(n,s,i)}return r}static renderOnRawImageData(t,e,r){for(let i=0;i<t.getVSize();i++)for(let s=0;s<t.getHSize();s++){let a=M.rayForPixel(t,s,i),n=M.colorAt(e,a);this.drawPixel(t.getVSize(),s,i,n,r)}}static renderOnRawImageDataSector(t,e,r,i,s,a,n){for(let o=a;o<n;o++)for(let a=i;a<s;a++){let i=M.rayForPixel(t,a,o),s=M.colorAt(e,i);this.drawPixel(t.getVSize(),a,o,s,r)}}static fillWithBlack(t,e,r){for(let i=0;i<r;i++)for(let s=0;s<e;s++){let e=4*(r*i+s);t[e+0]=30,t[e+1]=30,t[e+2]=30,t[e+3]=255}}static drawPixel(t,e,r,i,s){let a=4*(t*r+e);s[a+0]=Math.round(255*i.r),s[a+1]=Math.round(255*i.g),s[a+2]=Math.round(255*i.b),s[a+3]=255}}let R=new class{constructor(){this.size=600,this.sectorSize=this.size<100?Math.round(this.size/100*10):this.size/100*10,this.counterFrom_X=0,this.counterTo_X=this.sectorSize,this.counterFrom_Y=0,this.counterTo_Y=this.sectorSize,this.canvasId="raycasterCanvas",this.canvas=document.getElementById(this.canvasId),this.cancelRendering=!1,this.canvasImageData=null,this.rawImageData=null,this.ctx=null}initializeCanvasAndSizes(){if(this.canvas=document.getElementById(this.canvasId),this.canvas.width=this.size,this.canvas.height=this.size,this.ctx=this.canvas.getContext("2d"),!this.canvas||!this.ctx)throw Error(`There is no canvas with id ${this.canvasId} on this page.`);this.canvasImageData=this.ctx.createImageData(this.size,this.size),this.rawImageData=this.canvasImageData.data,this.fillCanvasWithBlack(),this.ctx.putImageData(this.canvasImageData,0,0),this.sectorSize=this.size<100?Math.round(this.size/100*10):this.size/100*10;let t=D.uuid(),e=this.canvas.parentNode;window.history.pushState({},t,`?uid=${t}`);var r=this;e&&e.addEventListener("mousedown",t=>{!function(t){t.preventDefault();let i=t.clientX;t.clientY;let s=e.offsetWidth,a=s/e.offsetHeight;function n(t){let r=t.clientX-i;t.clientY;let n=s+r;e.style.width=`${n}px`,e.style.height=`${n/a}px`}function o(){window.removeEventListener("mousemove",n),window.removeEventListener("mouseup",o)}window.addEventListener("mousemove",n),window.addEventListener("mouseup",o),window.addEventListener("mouseup",function t(e){e.preventDefault(),window.removeEventListener("mousemove",n),window.removeEventListener("mouseup",o),window.removeEventListener("mouseup",t),r.reset()})}(t)})}reset(){}fillCanvasWithBlack(){this.ctx&&this.rawImageData&&this.canvasImageData&&(I.fillWithBlack(this.rawImageData,this.size,this.size),this.ctx.putImageData(this.canvasImageData,0,0))}draw(t,s,a,n){let o=D.createPlane();o.setTransform(M.multiplyMatrix(D.getRotationMatrixX(Math.PI/2),D.getTranslationMatrix(0,200,0)));let l=o.getMaterial();l.pattern=D.createNestedPattern(D.createPerturbedGradientAndRingPattern(new i(1,0,0),new i(0,0,1)),D.createGradientPattern(new i(1,1,0),new i(1,0,1))),l.pattern.setTransform(D.getScalingMatrix(.1,.1,.1)),o.setMaterial(l);let c=D.createPlane();c.setTransform(D.getTranslationMatrix(0,.01,0));let u=c.getMaterial();u.setColor(new i(1,.9,.9)),u.setSpecular(0),u.pattern=D.createBlendedGradientAndRingPattern(new i(1,0,0),new i(0,0,1)),c.setMaterial(u);let h=D.createSphere();h.setTransform(D.getTranslationMatrix(-.5,1,.5));let g=h.getMaterial();g.setDiffuse(.7),g.setSpecular(.3),g.pattern=D.buildStripePattern(y,b),h.setMaterial(g);let m=D.createSphere();m.setTransform(M.multiplyMatrix(D.getTranslationMatrix(1.5,.5,-.5),D.getScalingMatrix(.5,.5,.5)));let d=m.getMaterial(),x=D.createGradientPattern(new i(1,0,0),new i(1,1,0));x.setTransform(D.getScalingMatrix(2,2,2)),d.setDiffuse(.7),d.setSpecular(.3),d.pattern=x,m.setMaterial(d);let w=D.createSphere();w.setTransform(M.multiplyMatrix(D.getTranslationMatrix(-1.5,.33,-.75),D.getScalingMatrix(.33,.33,.33)));let p=w.getMaterial();p.setDiffuse(.7),p.setSpecular(.3),p.pattern=D.createNestedStripeAndGradientPattern(new i(1,1,0),new i(1,0,1)),p.pattern.setTransform(D.getScalingMatrix(.5,.5,.5)),w.setMaterial(p);let f=D.createDefaultWorld(),z=D.createPointLight(new e(-10,10,-10),new i(1,1,1));f.setLightSource(z),f.setShapes([c,w,h,m,o]);let P=D.createCamera(this.size,this.size,Math.PI/3);P.setTranform(M.viewTransform(new e(0,1.5,-5),new e(0,1,0),new r(0,1,0))),this.rawImageData&&this.ctx&&this.canvasImageData&&(I.renderOnRawImageDataSector(P,f,this.rawImageData,t,s,a,n),this.ctx.putImageData(this.canvasImageData,0,0))}callBack(){this.draw(this.counterFrom_X,this.counterTo_X,this.counterFrom_Y,this.counterTo_Y);let t=this.counterTo_X===this.size,e=this.counterTo_Y===this.size;this.counterFrom_X=this.counterTo_X,this.counterTo_X+=this.sectorSize,t?t&&!e&&(this.counterFrom_X=0,this.counterTo_X=this.sectorSize,this.counterFrom_Y=this.counterTo_Y,this.counterTo_Y+=this.sectorSize,this.cancelRendering?this.initializeCanvasAndSizes():window.requestAnimationFrame(this.callBack.bind(this))):this.cancelRendering?this.initializeCanvasAndSizes():window.requestAnimationFrame(this.callBack.bind(this))}};R.initializeCanvasAndSizes(),R.callBack();
//# sourceMappingURL=index.cc835baa.js.map
